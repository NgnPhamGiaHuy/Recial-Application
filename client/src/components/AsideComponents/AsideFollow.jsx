"use client"import { useCallback, useState } from "react";import { shallowEqual, useSelector } from "react-redux";import { useGetUserDataFetcher } from "@/hooks";import { setUserFollowingData } from "@/store/actions/user/userActions";import { AsideFollowItem, AsideShowMoreOrShowLessButton, LoadingComponent } from "@/components";const AsideFollow = () => {    const userProps = useSelector(state => state.user, shallowEqual);    const { isLoading} = useGetUserDataFetcher("following", setUserFollowingData);    const [asideFollowItemToShow, setAsideFollowItemToShow] = useState(3);    const [asideNavigationItemsToShow, setAsideNavigationItemsToShow] = useState(6);    const showMoreAsideFollowItem = useCallback((value) => {        setAsideFollowItemToShow(value.length)    }, [asideNavigationItemsToShow]);    const showLessAsideFollowItem = useCallback(() => {        setAsideFollowItemToShow(3)    }, [setAsideNavigationItemsToShow]);    return (        <>            <div className="pb-[8px]">                <div className="pt-[20px] pb-[4px] flex flex-col group relative">                    <div className="px-[16px] flex flex-col relative">                        <div className="my-[-5px]">                            <div className="my-[5px] flex justify-between items-center relative">                                <span className="block text-[16px] text-zinc-500 font-bold leading-5 overflow-hidden line-clamp-2">                                    Your following                                </span>                                <span className="ml-[8px] p-[8px] opacity-0 group-hover:opacity-100 text-[14px] text-lime-500 leading-4 rounded-md cursor-pointer hover:bg-zinc-100">                                    Edit                                </span>                            </div>                        </div>                    </div>                </div>            </div>            { isLoading ? (                <LoadingComponent/>            ) : (                userProps?.user?.following?.length ? (                    <>                        <ul>                            { userProps?.user?.following?.slice(0, asideFollowItemToShow).map((value, index) => (                                <AsideFollowItem key={index} userProps={value} hasNotificationBadge={true}/>                            )) }                        </ul>                        {asideFollowItemToShow === userProps?.user?.following?.length ? (                            <AsideShowMoreOrShowLessButton showMore={false} onClick={() => showLessAsideFollowItem()}/>                        ) : (                            <AsideShowMoreOrShowLessButton showMore={true} onClick={() => showMoreAsideFollowItem(userProps?.user?.following)}/>                        )}                    </>                ) : null            )}        </>    );};export default AsideFollow;